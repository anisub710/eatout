header <- HEAD("https://api.yelp.com/v3", config(token = parsed_creds)
first.response <- GET("https://api.yelp.com/v3/businesses/search?term=delis&latitude=37.786882&longitude=-122.399972",
query = first.query)
first.response
first.body <- fromJSON(content(first.response, "text"))
first.body
?config
header <- HEAD("https://api.yelp.com/v3", config(token = parsed_creds))
header <- HEAD("https://api.yelp.com/v3", config(token = parsed_creds$path))
test <-  parsed_creds$path
header <- HEAD("https://api.yelp.com/v3", config(token = test))
shiny::runApp('Desktop/UW/Quarter 2/INFO 201/Practice/module15-shiny/exercise-2')
runApp('Desktop/UW/Quarter 2/INFO 201/Practice/module15-shiny/exercise-2')
setwd("~/Desktop/UW/Quarter 2/INFO 201/Practice/module15-shiny/exercise-2")
runApp()
runApp()
install.packages('rsconnect')
rsconnect::setAccountInfo(name='ask710', token='98FFB80B66CB8E017B1238789C45855B', secret='h2bxtkkzQYSjgXZ0CbyNSnURR5sbKTaXBeaeuxmH')
rsconnect::deployApp('/Users/anirudhsubramanyam/Desktop/UW/Quarter 2/INFO 201/Practice/module15-shiny/exercise-2/app.R')
install.packages('rsconnect')
rsconnect::setAccountInfo(name='ask710', token='98FFB80B66CB8E017B1238789C45855B', secret='h2bxtkkzQYSjgXZ0CbyNSnURR5sbKTaXBeaeuxmH')
library(rsconnect)
rsconnect::deployApp('/Users/anirudhsubramanyam/Desktop/UW/Quarter 2/INFO 201/Practice/module15-shiny/exercise-2/')
install.packages("rsconnect")
library(rsconnect)
rsconnect::setAccountInfo(name='ask710', token='98FFB80B66CB8E017B1238789C45855B', secret='h2bxtkkzQYSjgXZ0CbyNSnURR5sbKTaXBeaeuxmH')
rsconnect::deployApp('/Users/anirudhsubramanyam/Desktop/UW/Quarter 2/INFO 201/Practice/module15-shiny/exercise-2/')
library(leaflet)
library(shiny)
library(httr)
library(jsonlite)
library(dplyr)
library(maps)
library(ggplot2)
state.data <- map_data("state")
colnames(state.data)<- c("lng", "lat", "group", "order", "state", "subregion")
restaurant.ratings <- read.csv("data/yelpRatings.csv", stringsAsFactors = FALSE)
setwd("~/Desktop/UW/Quarter 2/INFO 201/Practice/final_project_demo")
restaurant.ratings <- read.csv("data/yelpRatings.csv", stringsAsFactors = FALSE)
colnames(restaurant.ratings) <- c("ratings", "county", "state")
restaurant.ratings <- restaurant.ratings %>% group_by(state) %>% summarise(ratings = mean(ratings))
restaurant.ratings$state <- tolower(restaurant.ratings$state)
restaurant.data <- left_join(state.data, restaurant.ratings)
restaurant.data <- restaurant.data %>% select(lng, lat, state, ratings)
map.test <- leaflet(restaurant.data) %>%
addTiles()%>%
addPolygons(lng = ~lng, lat = ~lat)
map.test
library(leaflet)
library(shiny)
library(httr)
library(jsonlite)
library(dplyr)
library(maps)
library(ggplot2)
data(state.map)
install.packages("choroplethrMaps")
library(choroplethrMaps)
data(state.map)
View(state.map)
state.data2 <- data(state.map)
state.data2 <- state.data2 %>% select(lng = long, lat, state = region)
state.data2 <- state.data2 %>% select(long, lat,region)
state.data2 <- data(state.map)
state.data2 <- state.data2 %>% select(long, lat,region)
state.data2 <- data(state.map)
View(state.data2)
state.data2 <- state.map
state.data2 <- state.data2 %>% select(long, lat,region)
state.data2 <- state.data2 %>% select(lng = long, lat,region)
state.data2 <- state.data2 %>% select(lng = long, lat,state = region)
state.data2 <- state.map
state.data2 <- state.data2 %>% select(lng = long, lat,state = region)
View(state.data2)
restaurant.ratings <- restaurant.ratings %>% group_by(state) %>% summarise(ratings = mean(ratings))
restaurant.ratings <- read.csv("data/yelpRatings.csv", stringsAsFactors = FALSE)
colnames(restaurant.ratings) <- c("ratings", "county", "state")
restaurant.ratings <- restaurant.ratings %>% group_by(state) %>% summarise(ratings = mean(ratings))
restaurant.ratings$state <- tolower(restaurant.ratings$state)
restaurant.data <- left_join(state.data2, restaurant.ratings)
restaurant.data <- restaurant.data %>% select(lng, lat, state, ratings)
map.test <- leaflet(restaurant.data) %>%
addTiles()%>%
addPolygons(lng = ~lng, lat = ~lat)
map.test
state.data <- map_data("state")
colnames(state.data)<- c("lng", "lat", "group", "order", "state", "subregion")
restaurant.ratings <- read.csv("data/yelpRatings.csv", stringsAsFactors = FALSE)
colnames(restaurant.ratings) <- c("ratings", "county", "state")
restaurant.ratings <- restaurant.ratings %>% group_by(state) %>% summarise(ratings = mean(ratings))
restaurant.ratings$state <- tolower(restaurant.ratings$state)
restaurant.data <- left_join(state.data, restaurant.ratings)
restaurant.data <- restaurant.data %>% select(lng, lat, state, ratings)
map.test <- leaflet(restaurant.data) %>%
addTiles()%>%
addPolygons(lng = ~lng, lat = ~lat)
map.test
length(mapStates$x)
mapStates = map("state", fill = TRUE, plot = FALSE)
map.test <- leaflet(restaurant.data) %>%
addTiles()%>%
addPolygons(data = mapStates)
map.test <- leaflet(restaurant.data) %>%
addTiles()%>%
addPolygons(data = mapStates, fillColor = ~restaurant.data$ratings)
map.test
map.test <- leaflet(restaurant.data) %>%
addTiles()%>%
addPolygons(data = mapStates, fillColor = ~pal(restaurant.data$ratings))
pal <- colorBin(
palette = "YlOrRd",
domain = restaurant.data$ratings, bins = c(3.13, 3.23, 3.43, 3.63, 3.93, 4.03, 4.23))
map.test <- leaflet(restaurant.data) %>%
addTiles()%>%
addPolygons(data = mapStates, fillColor = ~pal(restaurant.data$ratings))
map.test
length(mapStates$x)
length(mapStates$y)
df <- data.frame(matrix(unlist(mapStates), nrow=15599, byrow=T), stringsAsFactors = FALSE)
View(df)
install.packages("geojsonio")
library(geojsonio)
states <- geojsonio::geojson_read("json/us-states.geojson", what = "sp")
states <- geojsonio::geojson_read("json/us-states.json", what = "sp")
map.test <- leaflet(states) %>%
addTiles()%>%
addPolygons()
map.test
pal <- colorBin(
palette = "YlOrRd",
domain = restaurant.data$ratings, bins = c(3.13, 3.23, 3.43, 3.63, 3.93, 4.03, 4.23))
map.test <- leaflet(states) %>%
addTiles()%>%
addPolygons(fillColor = ~restaurant.data$ratings)
map.test
names(states)
View(states)
View(states)
restaurant.ratings <- restaurant.ratings %>% group_by(NAME) %>% summarise(ratings = mean(ratings))
colnames(restaurant.ratings) <- c("ratings", "county", "NAME")
library(geojsonio)
library(leaflet)
library(shiny)
library(httr)
library(jsonlite)
library(dplyr)
library(maps)
library(ggplot2)
library(geojsonio)
states <- geojsonio::geojson_read("json/us-states.json", what = "sp")
restaurant.ratings <- read.csv("data/yelpRatings.csv", stringsAsFactors = FALSE)
colnames(restaurant.ratings) <- c("ratings", "county", "NAME")
restaurant.ratings <- restaurant.ratings %>% group_by(NAME) %>% summarise(ratings = mean(ratings))
restaurant.ratings[12, 1] <- "Hawaii"
restaurant.data <- left_join(states, restaurant.ratings)
library(sp)
restaurant.data <- merge(states, restaurant.ratings)
View(restaurant.ratings)
View(restaurant.data)
View(restaurant.ratings)
pal <- colorBin(
palette = "YlOrRd",
domain = restaurant.data$ratings, bins = c(3.13, 3.23, 3.43, 3.63, 3.93, 4.03, 4.23))
map.test <- leaflet(restaurant.data) %>%
addTiles()%>%
addPolygons()
map.test
map.test <- leaflet(restaurant.data) %>%
addTiles()%>%
addPolygons(fillColor = ~pal(ratings))
map.test
map.test <- leaflet(restaurant.data) %>%
addTiles()%>%
addPolygons(fillColor = ~ratings)
map.test
names(restaurant.data)
restaurant.data <- na.omit(restaurant.data)
pal <- colorBin(
palette = "YlOrRd",
domain = restaurant.data$ratings, bins = c(3.13, 3.23, 3.43, 3.63, 3.93, 4.03, 4.23))
map.test <- leaflet(restaurant.data) %>%
addTiles()%>%
addPolygons(fillColor = ~ratings)
map.test
library(leaflet)
library(shiny)
library(httr)
library(jsonlite)
library(dplyr)
library(geojsonio)
library(sp)
states <- geojsonio::geojson_read("json/us-states.json", what = "sp")
source("accessToken.R")
restaurant.ratings <- read.csv("data/yelpRatings.csv", stringsAsFactors = FALSE)
colnames(restaurant.ratings) <- c("ratings", "county", "NAME")
restaurant.ratings <- restaurant.ratings %>% group_by(NAME) %>% summarise(ratings = mean(ratings))
restaurant.ratings[12, 1] <- "Hawaii"
restaurant.data <- merge(states, restaurant.ratings)
restaurant.data <- na.omit(restaurant.data)
pal <- colorBin(
palette = "YlOrRd",
domain = restaurant.data$ratings, bins = c(3.13, 3.23, 3.43, 3.63, 3.93, 4.03, 4.23))
pal <- colorBin(
palette = "YlOrRd",
domain = restaurant.data$ratings, bins = c(3.13, 3.23, 3.43, 3.63, 3.93, 4.03, 4.23))
map.test <- leaflet(restaurant.data) %>%
setView(-96, 37.8, 4) %>%
addTiles()%>%
addPolygons(fillColor = ~pal(ratings),
weight = 2,
opacity = 1,
color = "white",
dashArray = "3",
fillOpacity = 0.7)
map.test
map.test <- leaflet(restaurant.data) %>%
setView(-96, 37.8, 4) %>%
addTiles()%>%
addPolygons(fillColor = ~pal(ratings),
weight = 2,
opacity = 1,
color = "white",
dashArray = "3",
fillOpacity = 0.7,
highlight = highlightOptions(
weight = 5,
color = "#666",
dashArray = "",
fillOpacity = 0.7,
bringToFront = TRUE),
label = labels,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "15px",
direction = "auto"))
restaurant.data$NAME
labels <- sprintf(
"<strong>%s</strong><br/>%g people / mi<sup>2</sup>",
as.character(restaurant.data$NAME), restaurant.data$ratings
) %>% lapply(htmltools::HTML)
map.test <- leaflet(restaurant.data) %>%
setView(-96, 37.8, 4) %>%
addTiles()%>%
addPolygons(fillColor = ~pal(ratings),
weight = 2,
opacity = 1,
color = "white",
dashArray = "3",
fillOpacity = 0.7,
highlight = highlightOptions(
weight = 5,
color = "#666",
dashArray = "",
fillOpacity = 0.7,
bringToFront = TRUE),
label = labels,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "15px",
direction = "auto"))
map.test
labels <- sprintf(
"<strong>%s</strong><br/><strong> Rating: </strong> <em>%g</em> ",
as.character(restaurant.data$NAME), restaurant.data$ratings
) %>% lapply(htmltools::HTML)
map.test <- leaflet(restaurant.data) %>%
setView(-96, 37.8, 4) %>%
addTiles()%>%
addPolygons(fillColor = ~pal(ratings),
weight = 2,
opacity = 1,
color = "white",
dashArray = "3",
fillOpacity = 0.7,
highlight = highlightOptions(
weight = 5,
color = "#666",
dashArray = "",
fillOpacity = 0.7,
bringToFront = TRUE),
label = labels,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "15px",
direction = "auto"))
map.test
choropleth <- leaflet(restaurant.data) %>%
setView(-96, 37.8, 4) %>%
addTiles()%>%
addPolygons(fillColor = ~pal(ratings),
weight = 2,
opacity = 1,
color = "white",
dashArray = "3",
fillOpacity = 0.7,
highlight = highlightOptions(
weight = 5,
color = "#666",
dashArray = "",
fillOpacity = 0.7,
bringToFront = TRUE),
label = labels,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "15px",
direction = "auto"))
counties <-  geojsonio::geojson_read("json/us-counties.json", what = "sp")
counties <-  geojsonio::geojson_read("json/us-counties.json", what = "sp")
restaurant.ratings <- read.csv("data/yelpRatings.csv", stringsAsFactors = FALSE)
View(counties)
choropleth <- leaflet(restaurant.data) %>%
setView(-96, 37.8, 4) %>%
addTiles()%>%
addPolygons(fillColor = ~pal(ratings),
weight = 2,
opacity = 1,
color = "white",
dashArray = "3",
fillOpacity = 0.7,
highlight = highlightOptions(
weight = 5,
color = "#666",
dashArray = "",
fillOpacity = 0.7,
bringToFront = TRUE),
label = labels,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "15px",
direction = "auto"))
choropleth
choropleth <- leaflet(restaurant.data) %>%
setView(lng = -94, lat = 37.45, zoom = 4) %>%
addTiles()%>%
addPolygons(fillColor = ~pal(ratings),
weight = 2,
opacity = 1,
color = "white",
dashArray = "3",
fillOpacity = 0.7,
highlight = highlightOptions(
weight = 5,
color = "#666",
dashArray = "",
fillOpacity = 0.7,
bringToFront = TRUE),
label = labels,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "15px",
direction = "auto"))
choropleth
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "15px",
direction = "auto")) %>%
addLegend(pal = pal, values = ~density, opacity = 0.7, title = NULL,
position = "bottomright")
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "15px",
direction = "auto")) %>%
addLegend(pal = pal, values = ~density, opacity = 0.7, title = NULL,
position = "bottomright")
choropleth <- leaflet(restaurant.data) %>%
setView(lng = -94, lat = 37.45, zoom = 4) %>%
addTiles()%>%
addLegend(pal = pal, values = ~density, opacity = 0.7, title = NULL,
position = "bottomright") %>%
addPolygons(fillColor = ~pal(ratings),
weight = 2,
opacity = 1,
color = "white",
dashArray = "3",
fillOpacity = 0.7,
highlight = highlightOptions(
weight = 5,
color = "#666",
dashArray = "",
fillOpacity = 0.7,
bringToFront = TRUE),
label = labels,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "15px",
direction = "auto"))
choropleth
choropleth <- leaflet(restaurant.data) %>%
setView(lng = -94, lat = 37.45, zoom = 4) %>%
addTiles()%>%
addLegend(pal = pal, values = ~density, opacity = 0.7, title = "Ratings",
position = "bottomright") %>%
addPolygons(fillColor = ~pal(ratings),
weight = 2,
opacity = 1,
color = "white",
dashArray = "3",
fillOpacity = 0.7,
highlight = highlightOptions(
weight = 5,
color = "#666",
dashArray = "",
fillOpacity = 0.7,
bringToFront = TRUE),
label = labels,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "15px",
direction = "auto"))
choropleth
runApp()
pal <- colorBin(
palette = "7-class Reds",
domain = restaurant.data$ratings, bins = c(3.13, 3.23, 3.43, 3.63, 3.93, 4.03, 4.23))
?colorBin
?palette
pal <- colorBin(
palette = "Reds",
domain = restaurant.data$ratings, bins = c(3.13, 3.23, 3.43, 3.63, 3.93, 4.03, 4.23))
choropleth <- leaflet(restaurant.data) %>%
setView(lng = -94, lat = 37.45, zoom = 4) %>%
addTiles()%>%
addLegend(pal = pal, values = ~density, opacity = 0.7, title = "Ratings",
position = "bottomright") %>%
addPolygons(fillColor = ~pal(ratings),
weight = 2,
opacity = 1,
color = "white",
dashArray = "3",
fillOpacity = 0.7,
highlight = highlightOptions(
weight = 5,
color = "#666",
dashArray = "",
fillOpacity = 0.7,
bringToFront = TRUE),
label = labels,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "15px",
direction = "auto"))
choropleth
pal <- colorBin(
palette = "Reds",
domain = restaurant.data$ratings, bins = c(3.13, 3.36, 3.59, 3.82, 4.06))
choropleth <- leaflet(restaurant.data) %>%
setView(lng = -94, lat = 37.45, zoom = 4) %>%
addTiles()%>%
addLegend(pal = pal, values = ~density, opacity = 0.7, title = "Ratings",
position = "bottomright") %>%
addPolygons(fillColor = ~pal(ratings),
weight = 2,
opacity = 1,
color = "white",
dashArray = "3",
fillOpacity = 0.7,
highlight = highlightOptions(
weight = 5,
color = "#666",
dashArray = "",
fillOpacity = 0.7,
bringToFront = TRUE),
label = labels,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "15px",
direction = "auto"))
choropleth
pal <- colorBin(
palette = "Grays",
domain = restaurant.data$ratings, bins = c(3.13, 3.36, 3.59, 3.82, 4.06))
pal <- colorBin(
palette = "Greys",
domain = restaurant.data$ratings, bins = c(3.13, 3.36, 3.59, 3.82, 4.06))
"<strong>%s</strong><br/><strong> Rating: </strong> <em>%g</em> ",
as.character(restaurant.data$NAME), restaurant.data$ratings) %>%
lapply(htmltools::HTML)
"<strong>%s</strong><br/><strong> Rating: </strong> <em>%g</em> ",
as.character(restaurant.data$NAME), restaurant.data$ratings) %>%
lapply(htmltools::HTML)
"<strong>%s</strong><br/><strong> Rating: </strong> <em>%g</em> ",
as.character(restaurant.data$NAME), restaurant.data$ratings) %>%
lapply(htmltools::HTML)
labels <- sprintf(
"<strong>%s</strong><br/><strong> Rating: </strong> <em>%g</em> ",
as.character(restaurant.data$NAME), restaurant.data$ratings) %>%
lapply(htmltools::HTML)
choropleth <- leaflet(restaurant.data) %>%
setView(lng = -94, lat = 37.45, zoom = 4) %>%
addTiles()%>%
addLegend(pal = pal, values = ~density, opacity = 0.7, title = "Ratings",
position = "bottomright") %>%
addPolygons(fillColor = ~pal(ratings),
weight = 2,
opacity = 1,
color = "white",
dashArray = "3",
fillOpacity = 0.7,
highlight = highlightOptions(
weight = 5,
color = "#666",
dashArray = "",
fillOpacity = 0.7,
bringToFront = TRUE),
label = labels,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "15px",
direction = "auto"))
choropleth
runApp()
runApp()
runApp()
runApp()
